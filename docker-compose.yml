networks:
  default:
    driver: bridge

volumes:
  primary_postgres_data:
  replica_postgres_data:
  redis_data:
  loki-data: {}
  grafana-data: {}
  sentinel-logs: {}

services:
  sentinel:
    build: .
    env_file:
      - ./cmd/.env
    container_name: sentinel
    ports:
      - "0.0.0.0:8080:8080" # make sure that container port is the same in config
    depends_on:
      postgres-primary:
        condition: service_healthy
      postgres-replica:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure
    volumes:
      - ./cmd/.env:/sentinel/.env
      - ./cmd/sentinel.config.yaml:/sentinel/sentinel.config.yaml
      - ./cmd/RBAC.config.json:/sentinel/RBAC.config.json
      - ./cmd/cert.pem:/sentinel/cert.pem
      - ./cmd/key.pem:/sentinel/key.pem
      - sentinel-logs:/var/log/sentinel
    networks:
      - default

  postgres-primary:
    image: postgres:17.2
    env_file:
      - ./cmd/.env
    environment:
      - POSTGRES_USER=${PRIMARY_DB_USER}
      - POSTGRES_PASSWORD=${PRIMARY_DB_PASSWORD}
      - POSTGRES_DB=${PRIMARY_DB_NAME}
      - PGDATA=/var/lib/postgresql/primary_data
    ports:
      - "${PRIMARY_DB_PORT}:${PRIMARY_DB_PORT}"
    volumes:
      - primary_postgres_data:/var/lib/postgresql/primary_data
      - ./configs/postgresql.primary.conf:/etc/postgresql/primary.conf
      - ./configs/pg_hba.primary.conf:/etc/postgresql/pg_hba.primary.conf
      - ./docker-db-init:/docker-entrypoint-initdb.d
    command: postgres -c config_file=/etc/postgresql/primary.conf -c port=5433 -c hba_file=/etc/postgresql/pg_hba.primary.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${PRIMARY_DB_USER} -d sentinel -p 5433"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - default

  postgres-replica:
    image: postgres:17.2
    env_file:
      - ./cmd/.env
    depends_on:
      - postgres-primary
    environment:
      - POSTGRES_USER=${REPLICA_DB_USER}
      - POSTGRES_PASSWORD=${REPLICA_DB_PASSWORD}
      - POSTGRES_DB=${REPLICA_DB_NAME}
      - PGDATA=/var/lib/postgresql/replica_data
    ports:
      - "${REPLICA_DB_PORT}:${REPLICA_DB_PORT}"
    volumes:
      - replica_postgres_data:/var/lib/postgresql/replica_data
      - ./configs/postgresql.replica.conf:/etc/postgresql/replica.conf
      - ./configs/pg_hba.replica.conf:/etc/postgresql/pg_hba.replica.conf
      - ./docker-db-init:/docker-entrypoint-initdb.d
      - ./scripts/docker-init-replica.sh:/docker-entrypoint-initdb.d/init-replica.sh
    command: >
      sh -c "
      chmod +x /docker-entrypoint-initdb.d/init-replica.sh &&
      /docker-entrypoint-initdb.d/init-replica.sh
      "
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${REPLICA_DB_USER} -d sentinel -p 5434"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - default

  redis:
    image: redis:7.2.5-alpine
    ports:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - default
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
  loki:
    image: grafana/loki:3.5.0
    ports:
      - "3100:3100"
    volumes:
      - ./configs/loki-config.yaml:/etc/loki/loki-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  promtail:
    image: grafana/promtail:3.5.0
    volumes:
      - sentinel-logs:/var/log/sentinel
      - ./configs/promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - loki
    restart: unless-stopped

